xgb_Wd_sftmx_md10_x7x3_5e3
{'lr': 0.001, 'batch_size': 5000, 'BS': 10000, 'N_epochs': 200, 'seed': 0}
>> Training...
  0%|          | 0/200 [00:00<?, ?it/s]/vols/cms/hw423/Week14/A_Post_trains/InferenceAware_Trainning.py:93: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  theta = torch.tensor(theta_init)
/vols/cms/hw423/Week14/A_Post_trains/InferenceAware_Trainning.py:73: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  return F.softmax(out)
  0%|          | 0/200 [00:08<?, ?it/s, test_loss=4.9, train_loss=4.03]  0%|          | 1/200 [00:08<27:38,  8.33s/it, test_loss=4.9, train_loss=4.03]  0%|          | 1/200 [00:16<27:38,  8.33s/it, test_loss=3.81, train_loss=3.06]  1%|          | 2/200 [00:16<27:04,  8.20s/it, test_loss=3.81, train_loss=3.06]  1%|          | 2/200 [00:24<27:04,  8.20s/it, test_loss=11.8, train_loss=9.49]  2%|▏         | 3/200 [00:24<26:35,  8.10s/it, test_loss=11.8, train_loss=9.49]  2%|▏         | 3/200 [00:32<26:35,  8.10s/it, test_loss=10.7, train_loss=8.75]  2%|▏         | 4/200 [00:32<26:25,  8.09s/it, test_loss=10.7, train_loss=8.75]  2%|▏         | 4/200 [00:40<26:25,  8.09s/it, test_loss=7.54, train_loss=6.29]  2%|▎         | 5/200 [00:40<26:09,  8.05s/it, test_loss=7.54, train_loss=6.29]  2%|▎         | 5/200 [00:48<26:09,  8.05s/it, test_loss=5.73, train_loss=4.3]   3%|▎         | 6/200 [00:48<25:56,  8.02s/it, test_loss=5.73, train_loss=4.3]  3%|▎         | 6/200 [00:53<29:04,  8.99s/it, test_loss=5.73, train_loss=4.3]
Traceback (most recent call last):
  File "/vols/cms/hw423/Week14/A_Post_trains/InferenceAware_Trainning.py", line 215, in <module>
    model, train_loss_ia, test_loss_ia = train_network(model_ia, X_train, X_test, y_train, y_test,w_train,w_test, train_hp=train_hp)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/vols/cms/hw423/Week14/A_Post_trains/InferenceAware_Trainning.py", line 170, in train_network
    raise ValueError("Loss is NaN, terminating training")
ValueError: Loss is NaN, terminating training
